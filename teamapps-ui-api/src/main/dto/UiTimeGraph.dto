/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package org.teamapps.dto;

class UiTimeGraph extends UiComponent {
	UiLineChartYScaleZoomMode yScaleZoomMode = UiLineChartYScaleZoomMode.DYNAMIC_INCLUDING_ZERO;
	required UiLongInterval intervalX;
	required List<UiTimeChartZoomLevel> zoomLevels;
	required int maxPixelsBetweenDataPoints;  // ... before switching to higher zoom level
	required List<UiGraph> graphs;
	UiScaleType yScaleType = UiScaleType.LINEAR;
	UiLineChartMouseScrollZoomPanMode mouseScrollZoomPanMode = UiLineChartMouseScrollZoomPanMode.ENABLED;
	String locale;
	String timeZoneId = null;

	command setIntervalX(UiLongInterval intervalX);
	command setMaxPixelsBetweenDataPoints(int maxPixelsBetweenDataPoints);
	command addData(int zoomLevel, Dictionary<UiGraphData> data);
	command resetGraphData(String graphId); // client will request data again (corresponding to zoom and component size)
	command resetAllData(UiLongInterval intervalX, List<UiTimeChartZoomLevel> newZoomLevels); // resets all data
	command setMouseScrollZoomPanMode(UiLineChartMouseScrollZoomPanMode mouseScrollZoomPanMode);
	command setSelectedInterval(UiLongInterval intervalX);

	command setGraphs(List<UiGraph> graphs);
	command addOrUpdateGraph(UiGraph graph);

	command zoomTo(UiLongInterval intervalX);

	event zoomed(UiLongInterval displayedInterval, int zoomLevelIndex, double millisecondsPerPixel, Dictionary<List<UiLongInterval>> neededIntervalsByGraphId);
	event intervalSelected(UiLongInterval intervalX);
}

enum UiLineChartYScaleZoomMode {
    FIXED,
    DYNAMIC,
    DYNAMIC_INCLUDING_ZERO
}

enum UiLineChartMouseScrollZoomPanMode {
	ENABLED,
	WITH_MODIFIER_KEY,
	DISABLED
}

class UiTimeChartZoomLevel {
	required long approximateMillisecondsPerDataPoint;
}

// ==== GRAPHS

interface UiGraph {
	String id;
	boolean yAxisVisible;
	String yAxisColor;
	UiScaleType yScaleType;
	UiLongInterval intervalY;
	UiLineChartYScaleZoomMode yScaleZoomMode;
	boolean yZeroLineVisible;
}

class UiLineGraph implements UiGraph {
	String dataSeriesId;
	UiLineChartCurveType graphType = UiLineChartCurveType.MONOTONE;
    double dataDotRadius;
    String lineColorScaleMin;
    String lineColorScaleMax;
    String areaColorScaleMin;
    String areaColorScaleMax;
}

class UiHoseGraph implements UiGraph {
	String upperBoundDataSeriesId;
	String middleLineDataSeriesId;
	String lowerBoundDataSeriesId;
	UiLineChartCurveType graphType = UiLineChartCurveType.MONOTONE;
    double dataDotRadius;
    String areaColor;
    boolean stripedArea;
    String middleLineColor;
	String lowerLineColor;
	String upperLineColor;
}

class UiIncidentGraph implements UiGraph {
    // no config at the moment...
}

class UiGraphGroup implements UiGraph {
	List<UiGraph> graphs;
}

// ==== DATA

interface UiGraphData {
     required UiLongInterval interval;
}
class UiLineGraphData implements UiGraphData {
    required List<UiLineGraphDataPoint> dataPoints;
}
class UiLineGraphDataPoint {
	required double x;
	required double y;
}
class UiIncidentGraphData implements UiGraphData {
    required List<UiIncidentGraphDataPoint> dataPoints;
}
class UiIncidentGraphDataPoint {
    required double x1;
	required double x2;
	required double y;
	required String color;
	required String tooltipHtml;
}
class UiHoseGraphData implements UiGraphData {
    required UiLineGraphData lowerLineData;
    required UiLineGraphData middleLineData;
    required UiLineGraphData upperLineData;
}
class UiGraphGroupData implements UiGraphData {
    required Dictionary<UiGraphData> graphDataByGraphId;
}



@TypeScriptFactory
class UiLongInterval {
 	required long min;
 	required long max;
}

enum UiLineChartCurveType {
	LINEAR,
    STEP,
    STEPBEFORE,
    STEPAFTER,
    BASIS,
    CARDINAL,
	MONOTONE,
    CATMULLROM
}

enum UiScaleType {
	LINEAR,
	LOG10,
	SYMLOG // see https://github.com/d3/d3-scale/blob/main/README.md#symlog-scales
}

