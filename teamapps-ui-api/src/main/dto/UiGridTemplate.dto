/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
class UiGridTemplate implements UiTemplate {
    required List<UiGridColumn> columns;
    required List<UiGridRow> rows;
    required List<AbstractUiTemplateElement> elements;
    int minWidth = 0;
    int maxWidth = 0;
	int minHeight = 0;
    int maxHeight = 0;
    UiSpacing padding;
    int gridGap = 0;
    String backgroundColor;
    UiBorder border;
    String ariaLabelProperty;
    String titleProperty;
}

abstract class AbstractUiTemplateElement {
	required String property;
    required int row;
    required int column;
    int rowSpan = 1;
    int colSpan = 1;
    UiHorizontalElementAlignment horizontalAlignment = UiHorizontalElementAlignment.LEFT;
    UiVerticalElementAlignment verticalAlignment = UiVerticalElementAlignment.CENTER;
    UiSpacing margin;
    String backgroundColor;
}

class UiTextElement extends AbstractUiTemplateElement {
	UiFontStyle fontStyle;
	double lineHeight = 1.2f;
	boolean wrapLines;
	UiSpacing padding;
	UiTextAlignment textAlignment = UiTextAlignment.LEFT;
}

class UiBadgeElement extends UiTextElement {
	// the badge background color is defined by the font background color. This only makes the element look like a badge.
	String borderColor;
}

class UiFloatingElement extends AbstractUiTemplateElement {
	required List<AbstractUiTemplateElement> elements;
	boolean wrap;
    UiCssAlignItems alignItems;
    UiCssJustifyContent justifyContent;
}

class UiImageElement extends AbstractUiTemplateElement {
	required int width;
	required int height;
	UiBorder border;
	UiSpacing padding;
	UiShadow shadow;
	UiImageSizing imageSizing = UiImageSizing.COVER;
}

enum UiImageSizing {
	COVER, CONTAIN, ORIGINAL, STRETCH
}

class UiIconElement extends AbstractUiTemplateElement {
	required int size;
}

class UiGlyphIconElement extends AbstractUiTemplateElement {
	required int size;
	String fontColor;
}

enum UiHorizontalElementAlignment {
	LEFT,
	CENTER,
	RIGHT,
	STRETCH
}

enum UiVerticalElementAlignment {
	TOP,
	CENTER,
	BOTTOM,
	STRETCH
}

enum UiTextAlignment {
	LEFT,
	CENTER,
	RIGHT,
	JUSTIFY
}

// ========== Format =============

class UiFontStyle {
	String fontColor;
	String backgroundColor;
	boolean bold;
	boolean underline;
	boolean italic;
	double relativeFontSize = 1;
}

class UiSizingPolicy {
	required UiSizeType type;
    double value;
    int minAbsoluteSize;
}

class UiSpacing {
	double top = 0;
	double right = 0;
	double bottom = 0;
	double left = 0;
}

class UiBorder {
	UiLine top;
	UiLine left;
	UiLine bottom;
	UiLine right;
	double borderRadius;
}

class UiShadow {
	required String color;
	required double blur;
	double offsetX;
	double offsetY;
	double spread;
}

enum UiSizeType {
	FIXED,
	RELATIVE,
	AUTO,
	FRACTION
}

class UiLine {
	required double thickness;
	required String color;
	UiLineType type = UiLineType.SOLID;
}

enum UiLineType {
	SOLID,
	DOTTED,
	DASHED,
	DOUBLE
}
