/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package org.teamapps.dto;

class UiPanel extends UiComponent {
	String icon;
	String title;
	UiPanelHeaderField leftHeaderField;
	UiPanelHeaderField rightHeaderField;
	UiPanelHeaderComponentMinimizationPolicy headerComponentMinimizationPolicy = UiPanelHeaderComponentMinimizationPolicy.LEFT_COMPONENT_FIRST;
	boolean alwaysShowHeaderFieldIcons = true;
	boolean hideTitleBar;

	UiToolbar* toolbar;
	UiComponent* content;
	boolean stretchContent = true;
	int padding = 0;
	List<UiWindowButtonType> windowButtons;
	List<UiToolButton*> toolButtons;

	command setContent(UiComponent* content);
	command setLeftHeaderField(UiPanelHeaderField field);
	command setRightHeaderField(UiPanelHeaderField field);
	command setTitle(String title);
	command setIcon(String icon);
	command setToolbar(UiToolbar* toolbar); //if null, remove toolbar
	command setMaximized(boolean maximized);
	command setWindowButtons(List<UiWindowButtonType> windowButtons);
	command setToolButtons(List<UiToolButton*> toolButtons);
	command setStretchContent(boolean stretch);

	event windowButtonClicked(UiWindowButtonType windowButton);
}

enum UiPanelHeaderComponentMinimizationPolicy {
    LEFT_COMPONENT_FIRST, RIGHT_COMPONENT_FIRST
}

class UiPanelHeaderField {
	required UiField* field;
	String icon;
	int minWidth = 50;
	int maxWidth = 200;
}

class UiWindow extends UiPanel {
	boolean modal = true;
	int width = 0; // 0 = full width
	int height = 0; // 0 = full height, -1 = auto
	String headerBackgroundColor = "rgba(190, 190, 190, .72)";
	String modalBackgroundDimmingColor = "rgba(0, 0, 0, .2)";
    boolean closeable; // show "close" special tool button
    boolean closeOnEscape; // close if the user presses escape
    boolean closeOnClickOutside; // close if the user clicks onto the area outside the window

	command show(int animationDuration);
	command close(int animationDuration);
	command setCloseable(boolean closeable);
	command setCloseOnEscape(boolean closeOnEscape);
	command setCloseOnClickOutside(boolean closeOnClickOutside);
	command setModal(boolean modal);
	command setModalBackgroundDimmingColor(String modalBackgroundDimmingColor);
	command setSize(int width, int height);
}

class UiElegantPanel extends UiComponent {
	String bodyBackgroundColor = "rgba(255, 255, 255, .4)";
	UiComponent* content;
	UiSpacing padding = new UiSpacing().setTop(20).setBottom(20);
	UiHorizontalElementAlignment horizontalContentAlignment = UiHorizontalElementAlignment.CENTER;
	int maxContentWidth = 0; // 0 = 100%

	command setContent(UiComponent* content);
}

enum UiWindowButtonType {
	MINIMIZE, MAXIMIZE_RESTORE, CLOSE
}
