package "projector-combobox":org.teamapps.projector.component.treecomponents.combobox;

import org.teamapps.projector.component.DtoComponent;
import org.teamapps.projector.template.DtoTemplate;
import org.teamapps.projector.component.field.DtoAbstractField;
import org.teamapps.projector.component.treecomponents.tree.DtoTreeRecord;
import org.teamapps.projector.component.core.DtoToolButton;

abstract class DtoAbstractComboBox extends DtoAbstractField {
	mutable boolean dropDownButtonVisible;
	mutable boolean showDropDownAfterResultsArrive;
	mutable boolean firstEntryAutoHighlight;
	mutable int textHighlightingEntryLimit;
	mutable boolean autoCompletionEnabled; // if true, by typing any letter, the first matching will be selected (keeping all not yet entered letters int the text box selected)
	mutable boolean freeTextEnabled;
	mutable boolean clearButtonEnabled;
	mutable boolean expandersVisible;
	mutable boolean expandAnimationEnabled;
	mutable String placeholderText;
	mutable Integer dropDownMinWidth;
	mutable Integer dropDownMaxHeight;
	mutable int indentation;

	command replaceFreeTextEntry(String freeText, DtoComboBoxTreeRecord newEntry);

	event textInput(String enteredString);

	query lazyChildren(int parentId) returns List<DtoComboBoxTreeRecord>;
	query retrieveDropdownEntries(String queryString) returns List<DtoComboBoxTreeRecord>;
}

class DtoComboBox extends DtoAbstractComboBox {
	List<DtoToolButton*> toolButtons;

    command setToolButtons(List<DtoToolButton*> toolButtons);
}

class DtoComboBoxTreeRecord extends DtoTreeRecord {
	DtoTemplate* dropDownTemplate; // null == use asString
}

