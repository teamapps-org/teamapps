/**
 * THIS IS GENERATED CODE!
 * PLEASE DO NOT MODIFY - ALL YOUR WORK WOULD BE LOST!
 */

import {DtoA} from "./DtoA";
import {DtoI} from "./DtoI";
import {DtoACommandHandler} from "./DtoA";
import {DtoICommandHandler} from "./DtoI";
import {DtoAEventSource} from "./DtoA";
import {DtoIEventSource} from "./DtoI";
interface EventEmitter<EO> { addListener(fn: (eventObject?: EO) => void, ...rest: any): {unsubscribe: () => void}; }

export interface DtoB extends DtoA, DtoI {
	_type?: string;
}

export interface DtoBCommandHandler extends DtoACommandHandler, DtoICommandHandler {
}

export interface DtoBEventSource extends DtoAEventSource, DtoIEventSource {
}


