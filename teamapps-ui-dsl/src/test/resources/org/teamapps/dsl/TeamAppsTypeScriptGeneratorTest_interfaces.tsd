/**
 * THIS IS GENERATED CODE!
 * PLEASE DO NOT MODIFY - ALL YOUR WORK WOULD BE LOST!
 */

import {DtoReference} from "teamapps-client-communication";
import {DtoCommand} from "teamapps-client-communication";
import {DtoEvent} from "teamapps-client-communication";
import {DtoQuery} from "teamapps-client-communication";
interface EventEmitter<EO> { addListener(fn: (eventObject?: EO) => void, ...rest: any): {unsubscribe: () => void}; }

export interface DtoA {
	_type?: string;
	a: string;
	b?: string
	z: (query: DtoA_ZQuery) => Promise<string[]>
}

export interface DtoACommandHandler {
	x1(x: string): any;
	x2(x: string): Promise<number[]>|number[];
}

export interface DtoAEventSource {
	onY: EventEmitter<DtoA_YEvent>;
}

export interface DtoA_YEvent extends DtoEvent {
	y: string
}

export interface DtoA_ZQuery extends DtoQuery {
	s: string
}