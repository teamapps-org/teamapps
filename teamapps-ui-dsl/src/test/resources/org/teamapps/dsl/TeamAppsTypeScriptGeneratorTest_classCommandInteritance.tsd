/**
 * THIS IS GENERATED CODE!
 * PLEASE DO NOT MODIFY - ALL YOUR WORK WOULD BE LOST!
 */

import {DtoCommand} from "teamapps-client-communication";
import {DtoEvent} from "teamapps-client-communication";
import {DtoB} from "./DtoB";
import {DtoA} from "./DtoA";
import {DtoBCommandHandler} from "./DtoB";
import {DtoACommandHandler} from "./DtoA";
import {DtoBEventSource} from "./DtoB";
import {DtoAEventSource} from "./DtoA";
interface EventEmitter<EO> { addListener(fn: (eventObject?: EO) => void, ...rest: any): {unsubscribe: () => void}; }

export interface DtoC extends DtoB, DtoA {
	_type?: string;
	c?: string
}

export interface DtoCCommandHandler extends DtoBCommandHandler, DtoACommandHandler {
	x3(y3: string): any;
}

export interface DtoCEventSource extends DtoBEventSource, DtoAEventSource {
	onZ3: EventEmitter<DtoC_Z3Event>;
}

export interface DtoC_Z3Event extends DtoEvent {
}

