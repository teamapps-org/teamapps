/**
 * THIS IS GENERATED CODE!
 * PLEASE DO NOT MODIFY - ALL YOUR WORK WOULD BE LOST!
 */
export const typescriptDeclarationFixConstant = 1;

import {UiClientObject} from "../UiClientObject";
import {UiClientObjectReference} from "./UiClientObjectConfig";
import {TeamAppsUiComponentRegistry} from "../TeamAppsUiComponentRegistry";
import {TeamAppsUiContext} from "../TeamAppsUiContext";

export class CommandExecutor {
	private commandExecutorsByCommandName: {[commandName: string]: (targetObject: any, command: any) => void} = {
		    'A.nonStaticCommand': async (targetObject: any, command: any) => {
				return await targetObject.nonStaticCommand(command.x);
			}
	};

	private staticCommandExecutorsByCommandName: {[commandName: string]: (command: any, context: TeamAppsUiContext) => void} = {
		    'A.staticCommand': async (command: any, context: TeamAppsUiContext) => {
				return await (TeamAppsUiComponentRegistry.getComponentClassForName("A") as any).staticCommand(command.x, context);
			}
	};

	public async executeCommand(targetObject: any, command: any) {
		return await this.commandExecutorsByCommandName[command._type](targetObject, command);
	}

	public async executeStaticCommand(command: any, context: TeamAppsUiContext) {
		return await this.staticCommandExecutorsByCommandName[command._type](command, context);
	}
}