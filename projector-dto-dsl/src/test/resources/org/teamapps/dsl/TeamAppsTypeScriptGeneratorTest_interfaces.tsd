/**
 * THIS IS GENERATED CODE!
 * PLEASE DO NOT MODIFY - ALL YOUR WORK WOULD BE LOST!
 */

import {ClientObject} from "projector-client-object-api";
import {ServerObjectChannel} from "projector-client-object-api";
interface EventEmitter<EO> { addListener(fn: (eventObject?: EO) => void, ...rest: any): {unsubscribe: () => void}; }

export interface A {
	_type?: string;
	a?: string;
	b?: string
}

export interface ACommandHandler {
	x1(x: string): any;
	x2(x: string): Promise<number[]>|number[];
}

export interface AEventSource {
	onY: EventEmitter<A_YEvent>;
}

export interface AServerObjectChannel extends ServerObjectChannel {

    sendEvent(eventName: "y", eventObject: A_YEvent): void;

    sendQuery(eventName: "z", s: string): Promise<string[]>;

}

export interface A_YEvent {
	y: string
}

