/**
 * THIS IS GENERATED CODE!
 * PLEASE DO NOT MODIFY - ALL YOUR WORK WOULD BE LOST!
 */

import type {A} from "./A";
import type {I} from "./I";
import type {ServerObjectChannel} from "projector-client-object-api";
import type {ACommandHandler} from "./A";
import type {ICommandHandler} from "./I";
import type {AEventSource} from "./A";
import type {IEventSource} from "./I";
import type {A_BEvent} from "./A";
import type {I_JEvent} from "./I";

export interface B extends A, I {
	_type?: string;
}

export interface BCommandHandler extends ACommandHandler, ICommandHandler {
}

export interface BServerObjectChannel extends ServerObjectChannel {

    sendEvent(eventName: "b", eventObject: A_BEvent): void;

    sendEvent(eventName: "j", eventObject: I_JEvent): void;


}

export interface BEventSource extends AEventSource, IEventSource {
}

