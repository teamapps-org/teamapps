/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package org.teamapps.dto;

managed class UiApplicationLayout extends UiComponent {
	UiSplitPane* rootSplitPane;
	UiToolbar* toolbar;

	command setToolbar(UiToolbar* toolbar); // null removes the toolbar
	command setRootSplitPane(UiSplitPane* splitPane);
}

managed class UiMobileLayout extends UiComponent {
	UiToolbar* toolbar;
	UiComponent* initialView;
	UiNavigationBar* navigationBar;

	command setToolbar(UiToolbar* toolbar); // null removes the toolbar
	command setNavigationBar(UiNavigationBar* navBar); // null removes the navigation bar
	command showView(UiComponent* component, UiPageTransition animation, int animationDuration);
}

interface Emptyable {
	// marker interface for components that can be regarded as non-existent when they are empty
}


/**********************************************************************************************************************
*
*                                                   A C C O R D I O N
*
***********************************************************************************************************************/
managed class UiAccordionLayout extends UiComponent {
	required List<UiAccordionPanel> panels;
	boolean animate;
	boolean showAllPanels; //if true, opening another panel does not close the current open panel

	command addAccordionPanel(UiAccordionPanel panel, String neighborPanelId, boolean beforeNeighbor);
	command addAccordionPanelContent(String panelId, UiComponent* content);
	command removeAccordionPanel(String panelId);
	command removeAllPanels();
	command selectPanel(String panelId);
	command setPanelOpen(String panelId, boolean open);
}

class UiAccordionPanel {
	String panelId;
	String icon;
	String title;
	boolean scrollVertical = true;
	boolean scrollHorizontal;
	boolean open; //if false, close the panel
	UiComponent* content;
}

