/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package "teamapps-client-common-components":org.teamapps.projector.components.common.dto;

import org.teamapps.projector.component.DtoComponent;

class DtoChatDisplay extends DtoComponent {
	DtoChatMessageBatch initialMessages;
    boolean contextMenuEnabled;
    String deletedMessageIcon;

	command addMessages(DtoChatMessageBatch messages);
	command updateMessage(DtoChatMessage message);
	command deleteMessage(int messageId);
	command clearMessages(DtoChatMessageBatch messages);
    command closeContextMenu();

	query requestPreviousMessages() returns DtoChatMessageBatch;
    query requestContextMenu(int chatMessageId) returns DtoComponent*;
}

class DtoChatInput extends DtoComponent {
	required String defaultFileIcon;
	long maxBytesPerUpload;
	String uploadUrl;
	int messageLengthLimit;
	boolean attachmentsEnabled;

	command setAttachmentsEnabled(boolean attachmentsEnabled);

	event messageSent(DtoNewChatMessage message);
	event uploadTooLarge(String fileItemUuid, String fileName, String mimeType, long sizeInBytes);
	event uploadStarted(String fileItemUuid, String fileName, String mimeType, long sizeInBytes, int incompleteUploadsCount);
	event uploadCanceled(String fileItemUuid, String fileName, String mimeType, long sizeInBytes, int incompleteUploadsCount);
	event uploadFailed(String fileItemUuid, String fileName, String mimeType, long sizeInBytes, int incompleteUploadsCount);
	event uploadSuccessful(String fileItemUuid, String uploadedFileUuid, String fileName, String mimeType, long sizeInBytes, int incompleteUploadsCount);
	event fileItemClicked(String fileItemUuid);
	event fileItemRemoved(String fileItemUuid);
}

class DtoChatMessageBatch {
    required List<DtoChatMessage> messages;
    required boolean containsFirstMessage;
}

class DtoChatMessage {
	int id;
	String userImageUrl;
	String userNickname;
	String text;
	List<DtoChatPhoto> photos;
	List<DtoChatFile> files;
	boolean deleted;
}

class DtoChatPhoto {
	String fileName;
	String thumbnailUrl;
	String imageUrl;
}

class DtoChatFile {
	String name;
	String icon;
	long length;
	String thumbnailUrl;
	String downloadUrl;
}

@TypeScriptFactory
class DtoNewChatMessage {
	String text;
	List<DtoChatNewFile> uploadedFiles;
}

@TypeScriptFactory
class DtoChatNewFile {
	String uploadedFileUuid;
	String fileName;
}
