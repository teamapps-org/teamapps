/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package "teamapps-client-common-components":org.teamapps.projector.component.common.dto;

import org.teamapps.projector.component.DtoComponent;
import org.teamapps.projector.template.DtoTemplate;
import org.teamapps.projector.format.DtoBorder;
import org.teamapps.projector.format.DtoBoxShadow;

class DtoGridForm extends DtoComponent {
	required List<DtoComponent*> fields;
	required List<DtoFormLayoutPolicy> layoutPolicies;

	command updateLayoutPolicies(List<DtoFormLayoutPolicy> layoutPolicies);
	command setSectionCollapsed(String sectionId, boolean collapsed);
	command addOrReplaceField(DtoComponent* field);

	event sectionCollapsedStateChanged(String sectionId, boolean collapsed);
}

class DtoFormLayoutPolicy {
	 required int minWidth;
     required List<DtoFormSection> sections;
}

class DtoFormSection {
	required String id;
    required List<DtoGridColumn> columns;
    required List<DtoGridRow> rows;
    required List<DtoFormSectionPlacement> fieldPlacements;
    DtoSpacing margin;
    DtoSpacing padding;
    DtoBorder border;
    DtoBoxShadow shadow;
    String backgroundColor;
    boolean collapsible;
    boolean collapsed;
    boolean visible;
    DtoTemplate* headerTemplate;
    Object headerData;
    boolean drawHeaderLine;
    int gridGap; // pixels between fields, labels etc.
    boolean fillRemainingHeight;
    boolean hideWhenNoVisibleFields;
}

interface DtoFormSectionPlacement extends DtoGridPlacement {
}

class DtoFormSectionFieldPlacement implements DtoFormSectionPlacement {
	required DtoComponent* field;
}

class DtoFormSectionFloatingFieldsPlacement implements DtoFormSectionPlacement {
	required List<DtoFormSectionFloatingField> floatingFields;
	boolean wrap;
	int horizontalSpacing;
	int verticalSpacing;  
	// we might also want to be able to align the items differently than "baseline" - maybe add a setting "verticalFieldAlignment"
}

class DtoFormSectionFloatingField {
	required DtoComponent* field;
	int minWidth;
	int maxWidth;
	int minHeight;
    int maxHeight;
}
