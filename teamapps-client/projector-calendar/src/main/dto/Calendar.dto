/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package "projector-calendar":org.teamapps.projector.components.calendar.dto;

import org.teamapps.projector.component.DtoComponent;
import org.teamapps.projector.template.DtoTemplate;
import org.teamapps.projector.record.DtoIdentifiableClientRecord;

enum DtoCalendarViewMode {
	YEAR = "year",
	MONTH = "dayGridMonth",
	WEEK = "timeGridWeek",
	DAY = "timeGridDay"
}
enum DtoWeekDay {
	SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY
}
enum DtoCalendarEventRenderingStyle { // see http://fullcalendar.io/docs/event_rendering/Background_Events/
	DEFAULT = "", // normal event display
	BACKGROUND = "background", // only show colored shadow for the event. this may useful for subtly showing a secondary calendar with anonymous events inside the main one.
	INVERSE_BACKGROUND = "inverse-background" // highlight the whole calendar except the time period of the event.
}

class DtoCalendar extends DtoComponent {
	List<DtoCalendarEventClientRecord> initialData;
	
	DtoCalendarViewMode activeViewMode;
	long displayedDate;
	boolean showHeader;
	boolean tableBorder;
	boolean showWeekNumbers;
	int businessHoursStart;
	int businessHoursEnd;
	DtoWeekDay firstDayOfWeek;
	List<DtoWeekDay> workingDays;
	String tableHeaderBackgroundColor;
    String defaultBackgroundColor;
    String defaultBorderColor;

    boolean navigateOnHeaderClicks;
    int minYearViewMonthTileWidth;
    int maxYearViewMonthTileWidth;

    String locale;
    String timeZoneId;

	command setViewMode(DtoCalendarViewMode viewMode);
	command setDisplayedDate(long date);
	command addEvent(DtoCalendarEventClientRecord theEvent); // an existing event with the same id gets removed before the new one is added
	command removeEvent(int eventId);
	command setCalendarData(List<DtoCalendarEventClientRecord> events);
	command clearCalendar();
	command setTimeZoneId(String timeZoneId);

	event eventClicked(int eventId, boolean isDoubleClick);
	event eventMoved(int eventId, long newStart, long newEnd); // fired when an event gets moved or resized
	event dayClicked(long date, boolean isDoubleClick);
	event intervalSelected(long start, long end, boolean allDay);
	event dayHeaderClicked(long date);
	event weekHeaderClicked(int year, int week, long weekStartDate);
	event monthHeaderClicked(int year, int month, long monthStartDate);
	event viewChanged(
		DtoCalendarViewMode viewMode,
		long mainIntervalStart, long mainIntervalEnd, // the interval the calendar currently formally represents. (e.g. 1. January 2016 0:00 to 1 February 2016 0:00)
		long displayedIntervalStart, long displayedIntervalEnd // the interval the calendar displays. (e.g. 28. December 2015 0:00 to 8 February 2016 0:00)
	);
	event dataNeeded(long requestIntervalStart, long requestIntervalEnd); // interval of missing calendar data
}

class DtoCalendarEventClientRecord extends DtoIdentifiableClientRecord {
    DtoTemplate* timeGridTemplate;   // null = use default
    DtoTemplate* dayGridTemplate;    // null = use default
    DtoTemplate* monthGridTemplate;  // null = use default

	long start;
    long end;
    boolean allDay;
    boolean allowDragOperations;

    String icon;
    String title;

    String backgroundColor;
    String borderColor;
    DtoCalendarEventRenderingStyle rendering;
}
