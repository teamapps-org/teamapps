/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package "teamapps-client-core-components":org.teamapps.projector.dto;

import org.teamapps.projector.dto.Component;

import org.teamapps.projector.dto.Showable;
import org.teamapps.projector.dto.JustifyContent;

class Panel extends Component {
	mutable String icon;
	mutable String title;
	mutable PanelHeaderField leftHeaderField;
	mutable PanelHeaderField rightHeaderField;
	mutable PanelHeaderComponentMinimizationPolicy headerComponentMinimizationPolicy;
	mutable PanelHeaderFieldIconVisibilityPolicy headerFieldIconVisibilityPolicy;
	mutable boolean titleBarHidden;
	mutable Toolbar* toolbar;
	mutable Component* content;
	mutable boolean contentStretchingEnabled;
	mutable int padding;
	mutable List<WindowButtonType> windowButtons;
	mutable List<ToolButton*> toolButtons;

	command setMaximized(boolean maximized);

	event windowButtonClicked(WindowButtonType windowButton);
}

enum PanelHeaderComponentMinimizationPolicy {
    LEFT_COMPONENT_FIRST, RIGHT_COMPONENT_FIRST
}

enum PanelHeaderFieldIconVisibilityPolicy {
    DISPLAYED_WHEN_MINIMIZED, ALWAYS_DISPLAYED
}

class PanelHeaderField {
	required AbstractField* field;
	String icon;
	int minWidth;
	int maxWidth;
}

class Window extends Panel implements Showable {
	boolean modal;
	int width; // 0 = full width
	int height; // 0 = full height, -1 = auto
	String headerBackgroundColor;
	String modalBackgroundDimmingColor;
    boolean closeable; // show "close" special tool button
    boolean closeOnEscape; // close if the user presses escape
    boolean closeOnClickOutside; // close if the user clicks onto the area outside the window

	command show(int animationDuration);
	command close(int animationDuration);
	command setCloseable(boolean closeable);
	command setCloseOnEscape(boolean closeOnEscape);
	command setCloseOnClickOutside(boolean closeOnClickOutside);
	command setModal(boolean modal);
	command setModalBackgroundDimmingColor(String modalBackgroundDimmingColor);
	command setSize(int width, int height);
}

class ElegantPanel extends Component {
	String bodyBackgroundColor;
	Component* content;
	Spacing padding;
	JustifyContent horizontalContentAlignment;
	int maxContentWidth; // 0 = 100%

	command setContent(Component* content);
}

enum WindowButtonType {
	MINIMIZE, MAXIMIZE_RESTORE, CLOSE
}
