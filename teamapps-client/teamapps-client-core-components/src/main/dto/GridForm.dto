/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package "teamapps-client-core-components":org.teamapps.dto;

import org.teamapps.dto.Component;
import org.teamapps.dto.Template;

class GridForm extends Component {
	required List<Component*> fields;
	required List<FormLayoutPolicy> layoutPolicies;

	command updateLayoutPolicies(List<FormLayoutPolicy> layoutPolicies);
	command setSectionCollapsed(String sectionId, boolean collapsed);
	command addOrReplaceField(Component* field);

	event sectionCollapsedStateChanged(String sectionId, boolean collapsed);
}

class FormLayoutPolicy {
	 required int minWidth;
     required List<FormSection> sections;
}

class FormSection {
	required String id;
    required List<GridColumn> columns;
    required List<GridRow> rows;
    required List<FormSectionPlacement> fieldPlacements;
    Spacing margin;
    Spacing padding;
    Border border;
    Shadow shadow;
    String backgroundColor;
    boolean collapsible;
    boolean collapsed;
    boolean visible;
    Template* headerTemplate;
    Object headerData;
    boolean drawHeaderLine;
    int gridGap; // pixels between fields, labels etc.
    boolean fillRemainingHeight;
    boolean hideWhenNoVisibleFields;
}

interface FormSectionPlacement extends GridPlacement {
}

class FormSectionFieldPlacement implements FormSectionPlacement {
	required Component* field;
}

class FormSectionFloatingFieldsPlacement implements FormSectionPlacement {
	required List<FormSectionFloatingField> floatingFields;
	boolean wrap;
	int horizontalSpacing;
	int verticalSpacing;  
	// we might also want to be able to align the items differently than "baseline" - maybe add a setting "verticalFieldAlignment"
}

class FormSectionFloatingField {
	required Component* field;
	int minWidth;
	int maxWidth;
	int minHeight;
    int maxHeight;
}
