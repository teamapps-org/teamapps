/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2022 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
package "teamapps-client-core-components":org.teamapps.dto;

import org.teamapps.dto.Component;

// the read-only view (e.g. in a table) shows the currency indicator as part of the value text (e.g. "23.00 EUR" or "23.50 €")
//the value is always a long in cents for accuracy
class CurrencyField extends Field implements TextInputHandlingField {
	String locale;
	List<CurrencyUnit> currencyUnits; //list of ISO 4217 currencies - e.g. "USD", "EUR", etc. to be displayed as dropdown selection if available
	int fixedPrecision; // if >= 0, this overwrites the corresponding currency unit precision
	boolean showCurrencyBeforeAmount; // If true, the currency indicator is on the left of the amount. If false, it is on the right of the amount.
	boolean showCurrencySymbol; // If false, show "EUR", "USD", etc. as selected value of dropdown button. If true, show "$" for "USD", "€" for "EUR". The dopdown list shows always both ISO code and currency symbol (e.g. "$ (USD)" or "€ (EUR)"). Use "¤" as generic symbol (as defined in ISO standard).
	boolean alphaKeysQueryForCurrency; //if true a hit on e will query all currencies starting with e; autocomplete

	command setLocale(String locale);
	command setCurrencyUnits(List<CurrencyUnit> currencyUnits);
	command setFixedPrecision(int fixedPrecision);
	command setShowCurrencyBeforeAmount(boolean showCurrencyBeforeAmount);
	command setShowCurrencySymbol(boolean showCurrencySymbol);
}

class CurrencyUnit {
    String code;
    int fractionDigits;
    String name;
    String symbol;
}

@TypeScriptFactory
class CurrencyValue {
	required CurrencyUnit currencyUnit;
	required String amount; // big decimal!
}
