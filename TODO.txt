make Field an interfaces, so people can implement them more freely and creatively

Check if specialized Components (like SimpleCalendar) work

check if queries actually work
TeamAppsUndertowEmbeddedServer
get rid of required keyword in dto dsl

remove unused stuff from Common.ts


requirements for the maven plugin:
* copy DTO files to JAR
* import all DTO models from dependencies while generating
* generate DTOs (Java and Typescript)
    * make TypeScript output path configurable
* delete them on maven clean (TypeScript)
* add generated sources to compilation path
* add result of JavaScript build process to JAR
* sync pom version to package (optionally)
* make sure the teamapps plugin checks that teamapps dependencies are marked as provided!
* make projector-client-object-api an implicit DTO dependency

Low prio:
Table:
* column builder; return one when invoking addColumn() and listen to build() method.
* setHideHeaders() WTF...
BaseTemplate: icon and image are technically the same thing. so remove one of them (image)
* make count long! (see aviloo raw data perspective problem)

Upgrade FullCalendar to version 6 (and get rid of moment.js there)

Check if component.setStyle() removes all old styles for this selector? If so, is that wanted?

Search for ""\sto\w+String" in java files. Try to find a better solution (Jackson Serializers?)

* add Script and StyleSheet client object implementations
* Replace setOnClickJavaScript(...) with invocation of JavaScript client object

use external imports for references to concrete ClientObject instances instead of the generic ClientObject in DTOs. Example DtoTemplateField.template
Also use this for DateTimeFormatDescriptor...

make Label NOT a field. It is not!

rewrite README

enable TypeScript strict null checking for the core at least

search for all "new ProjectorEvent" occurrences and check if they need to be bound to toggling the event on the ClientObjectChannel...

change generation target packages:
 - core-components: org.teamapps.projector.component.core
 - no .dto!! (nowhere!) Many classes are now fully integrated (especially enums!)
rename "public .* (to|create)Ui\w+\(\)" methods to something more DTO like (or get rid of them)
introduce simplistic record-based DTO data objects that can replace many Java copy classes (same reason as for enums. It's just unnecessary to have them unless they provide some functionality).

distribute .less files! (currently most are in client-core-components)

On the Java side: replace milliseconds with Duration

rename document-viewer to document-previewer


rename teamapps-ux to projector-server-core

get rid of eval(...) in JS code by introducing Script as ClientObject (Script must be triggerable from the client side!)

