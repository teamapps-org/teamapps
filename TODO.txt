Remove necessity for displayedDeferredExecutor, and thereby @executeWhenFirstDisplayed()

fix queries

make parseHtml return an array (not NodeList!!) of elements, since the current api leads error-prone usage of NodeList. See comment in HtmlView.setContentHtml()

make Field an interfaces, so people can implement them more freely and creatively

Check if specialized Components (like SimpleCalendar) work

make components not have to depend on teamapps-ux

rename:
 clicked -> click
 Java: createUiX(UxObject...) -> createDto()

check if queries actually work
TeamAppsUndertowEmbeddedServer
get rid of required keyword in dto dsl

remove unused stuff from Common.ts


requirements for the maven plugin:
* copy DTO files to JAR
* import all DTO models from dependencies while generating
* generate DTOs (Java and Typescript)
    * make TypeScript output path configurable
* delete them on maven clean (TypeScript)
* add generated sources to compilation path
* add result of JavaScript build process to JAR
* sync pom version to package (optionally)

* Translations: Delete TranslationProvider.getTranslation(...)

make icons non-generic


Low prio:
Table:
* column builder; return one when invoking addColumn() and listen to build() method.
* setHideHeaders() WTF...
BaseTemplate: icon and image are technically the same thing. so remove one of them (image)
* make count long! (see aviloo raw data perspective problem)

Upgrade FullCalendar to version 6 (and get rid of moment.js there)

check if component.setStyle() removes all old styles for this selector? If so, wanted?

make sure the teamapps plugin checks that teamapps dependencies are marked as provided!

Search for ""\sto\w+String" in java files. Try to find a better solution (Jackson Serializers?)

plugin: make projector-client-object-api an implicit DTO dependency

add Script and StyleSheet client object implementations

use external imports for references to concrete ClientObject instances instead of the generic ClientObject in DTOs. Example DtoTemplateField.template

Remove createProjectorEventBoundToUiEvent. A lambda toggling the event is trivial, now. And much more intuitive.

Replace setOnClickJavaScript(...) with invocation of JavaScript client object

rename SessionContext.runWithContext() to run()

make Label NOT a field. It is not!

switch to junit jupiter

rework globalKeyEventOccurred - remove unnecessary clutter